version: 2

parameters:
  toolchain:
    description: >-
      Rust toolchain to use. Overrides the default toolchain (stable) or any
      toolchain specified in the project via `rust-toolchain`.
    type: string
    default: '1.47'

executor: default

jobs:
  build:
    branches:
      ignore:
        - gh-pages
    docker:
      # The compiletest-rs tests assume a specific Rust version's error outputs
      - image: rust:1.47
    steps:
      - checkout
      - update_toolchain:
          toolchain: <<parameters.toolchain>>

      - run:
          name: Version information
          command: |
            cargo --version
            cargo clippy --version

      - clippy

      - run:
          # We ship the Cargo.lock, to support Nix derivations
          name: Calculate dependencies
          command: test -e Cargo.lock || cargo generate-lockfile

      # - restore_cache:
      #     keys:
      #       - v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      #       - v1-bench-{{ .Branch }}-{{ .Revision }}
      #       - v1-bench-{{ .Branch }}
      #       - v1-bench-

      # DISABLED:
      # running 11 tests
      # kcov: error: Too much solib data read
      # error: failed to get coverage
      #
      # - run:
      #     name: Install cargo-kcov
      #     command: |
      #       apt-get update -yqq
      #       apt-get install -y binutils-dev libbfd-dev libcurl4-openssl-dev libelf-dev libdw-dev cmake gcc

      #       path=$PWD
      #       wget -qO- https://github.com/SimonKagstrom/kcov/archive/v36.tar.gz | tar xvz -C /tmp
      #       cd /tmp/kcov-36
      #       mkdir build
      #       cd build
      #       cmake ..
      #       make
      #       make install
      #       cd $path

      #       cargo install cargo-kcov

      - run:
          name: Build all targets
          command: cargo build --all --all-targets

      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
          key: v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}

      # DISABLED:
      # running 11 tests
      # kcov: error: Too much solib data read
      # error: failed to get coverage
      #
      # - run:
      #     name: Measure code coverage
      #     command: cargo kcov

      # - run:
      #     name: Run lints
      #     command: |
      #       if rustup component add clippy; then
      #           cargo clippy 
      #       else
      #           echo Skipping clippy
      #       fi

      - run:
          name: Run unit tests
          command: |
            cd test_suite/deps
            cargo clean
            cargo update
            cargo build
            cd ../..
            cargo test --all

      - run:
          name: Run benchmarks
          command: cargo bench --all

      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - "target/criterion"

      # DISABLED:
      # running 11 tests
      # kcov: error: Too much solib data read
      # error: failed to get coverage
      #
      # - run:
      #     name: Publish code coverage to codecov.io
      #     command: bash <(curl -s https://codecov.io/bash)
      #     when: on_success
